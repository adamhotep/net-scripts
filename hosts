#!/bin/sh
help() {
  echo "Query multiple hosts at the same time"
  #echo "Usage: hosts [-S SERVER] [HOST_OPTIONS] HOST [HOST...]"
  host -h 2>&1 |sed -e 1d -e '2 { s/host/hosts/ }' \
                    -e '3 { s/^/ /; s/ hostname.*/ [-S server ] hostname/ }' \
                    -e '/^ *-s/ { p; s/s.*/S specifies the DNS server/ }' \
                    -e '/^ *-v/ { p; s/v.*/V show version and license info/ }'
}

version() {
  echo "hosts 0.2+20160312, Copyright 2002+ by Adam Katz, GPL v2+"
  echo "Part of net-scripts:  https://github.com/adamhotep/net-scripts"
}

# exits with an error if we are missing an option's required argument
check_arg() {
  if [ -z "$2" ]; then
    echo "hosts: option requires an argument -- $1" >&2
    echo "Learn more with:  hosts -h" >&2
    exit 2
  fi
}

if ! command -v host >/dev/null 2>&1; then
  echo 'hosts: ERROR - required dependency `host` was not found in your path.'
  exit 2
fi

# It's best for wrappers to pass options blindly vs itemizing them with getopts.
# I've added a few long options merely because I can. It'll never be exhaustive.
while [ "$1" != "${1#-}" ]; do
  case "$1" in
    ( -h | --help )	help; exit ;;
    ( -V | --version )	version; exit ;;
    ( -S | --server )	check_arg "$@"; SERVER="$2"; shift ;;
    ( -S* )		SERVER="${1#-S}" ;;
    ( --server=?* )	SERVER="${1#--server=}" ;;
    ( -- )		shift; break ;;
    ( --type )		check_arg "$@"; OPTS="$OPTS -t $2"; shift ;;
    ( --type=?* )	OPTS="$OPTS -t ${1#--type=}" ;;
    ( -[cNtWRm] )	OPTS="$OPTS $1 $2"; shift ;; # all opts requiring args
    ( -[cNtWRm]* | -? )	OPTS="$OPTS $1" ;; # opt WITH arg or single opt w/o args
    ( -* )
      # Check for clusters of argument-less options ending in S for server.
      # Could replace many of the above cases, but this minimizes  sed  calls.
      TEST="$(echo "x$1" |sed 's/^x-[^cNtWRm]*/-/')"
      case "$TEST" in
        ( -S )	check_arg "$@"; SERVER="$2"; OPTS="$OPTS ${1%S}"; shift ;;
        ( -S* )	SERVER="${TEST#-S}"; OPTS="$OPTS ${1%S$SERVER}" ;;
        ( * )	OPTS="$OPTS $1" ;;
      esac ;;
  esac
  shift
done

RETVAL=1
for HOST in "$@"; do
  host $OPTS "$HOST" $server && RETVAL=$?
done

exit $RETVAL # we exit true if ANY query had a result

